VERSION --shell-out-anywhere --use-chmod --use-host-command --earthly-version-arg --use-copy-link 0.6

IMPORT github.com/defn/cloud/lib:master AS lib

FROM registry.fly.io/defn:dev-tower

ARG stack
ARG target

platform:

synth:
    FROM ${target}
    RUN ~/bin/e cdktf synth
    SAVE ARTIFACT cdktf.out

init:
    FROM +synth --target=${target}
    RUN --mount=type=cache,target=/home/ubuntu/.terraform.d/plugin-cache-buildkit sudo chown -v ubuntu:ubuntu /home/ubuntu/.terraform.d/plugin-cache-buildkit
    RUN --mount=type=cache,target=/home/ubuntu/.terraform.d/plugin-cache-buildkit --secret TFE_TOKEN --secret TF_TOKEN_app_terraform_io cd cdktf.out/stacks/${stack} && ~/bin/e env TF_PLUGIN_CACHE_DIR=/home/ubuntu/.terraform.d/plugin-cache-buildkit terraform init
    RUN --mount=type=cache,target=/home/ubuntu/.terraform.d/plugin-cache-buildkit mkdir -p /home/ubuntu/.terraform.d/plugin-cache && rsync -ia /home/ubuntu/.terraform.d/plugin-cache-buildkit/. /home/ubuntu/.terraform.d/plugin-cache/.
    RUN --secret TFE_TOKEN --secret TF_TOKEN_app_terraform_io cd cdktf.out/stacks/${stack} && ~/bin/e terraform init
    SAVE ARTIFACT cdktf.out

plan:
    FROM +init --target=${target} --stack=${stack}
    RUN --no-cache --secret TFE_TOKEN --secret TF_TOKEN_app_terraform_io --secret DIGITALOCEAN_TOKEN --secret BUILDKITE_API_TOKEN --secret GITHUB_TOKEN --secret CLOUDFLARE_API_KEY \
        cd cdktf.out/stacks/${stack} && ~/bin/e terraform plan -out=.plan
    SAVE ARTIFACT cdktf.out AS LOCAL cdktf.out


    FROM +plan --target=${target} --stack=${stack}
    RUN --push --no-cache --secret TFE_TOKEN --secret TF_TOKEN_app_terraform_io --secret DIGITALOCEAN_TOKEN --secret BUILDKITE_API_TOKEN --secret GITHUB_TOKEN --secret CLOUDFLARE_API_KEY \
        cd cdktf.out/stacks/${stack} && ~/bin/e terraform apply .plan
