# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from defn.dev.legumes.v1 import bean_pb2 as defn_dot_dev_dot_legumes_dot_v1_dot_bean__pb2


class BeanStoreServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetBean = channel.unary_unary(
                '/defn.dev.legumes.v1.BeanStoreService/GetBean',
                request_serializer=defn_dot_dev_dot_legumes_dot_v1_dot_bean__pb2.Bean.SerializeToString,
                response_deserializer=defn_dot_dev_dot_legumes_dot_v1_dot_bean__pb2.Bean.FromString,
                )
        self.PutBean = channel.unary_unary(
                '/defn.dev.legumes.v1.BeanStoreService/PutBean',
                request_serializer=defn_dot_dev_dot_legumes_dot_v1_dot_bean__pb2.Bean.SerializeToString,
                response_deserializer=defn_dot_dev_dot_legumes_dot_v1_dot_bean__pb2.Bean.FromString,
                )
        self.DeleteBean = channel.unary_unary(
                '/defn.dev.legumes.v1.BeanStoreService/DeleteBean',
                request_serializer=defn_dot_dev_dot_legumes_dot_v1_dot_bean__pb2.Bean.SerializeToString,
                response_deserializer=defn_dot_dev_dot_legumes_dot_v1_dot_bean__pb2.Bean.FromString,
                )


class BeanStoreServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetBean(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutBean(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteBean(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BeanStoreServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetBean': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBean,
                    request_deserializer=defn_dot_dev_dot_legumes_dot_v1_dot_bean__pb2.Bean.FromString,
                    response_serializer=defn_dot_dev_dot_legumes_dot_v1_dot_bean__pb2.Bean.SerializeToString,
            ),
            'PutBean': grpc.unary_unary_rpc_method_handler(
                    servicer.PutBean,
                    request_deserializer=defn_dot_dev_dot_legumes_dot_v1_dot_bean__pb2.Bean.FromString,
                    response_serializer=defn_dot_dev_dot_legumes_dot_v1_dot_bean__pb2.Bean.SerializeToString,
            ),
            'DeleteBean': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteBean,
                    request_deserializer=defn_dot_dev_dot_legumes_dot_v1_dot_bean__pb2.Bean.FromString,
                    response_serializer=defn_dot_dev_dot_legumes_dot_v1_dot_bean__pb2.Bean.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'defn.dev.legumes.v1.BeanStoreService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BeanStoreService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetBean(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/defn.dev.legumes.v1.BeanStoreService/GetBean',
            defn_dot_dev_dot_legumes_dot_v1_dot_bean__pb2.Bean.SerializeToString,
            defn_dot_dev_dot_legumes_dot_v1_dot_bean__pb2.Bean.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutBean(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/defn.dev.legumes.v1.BeanStoreService/PutBean',
            defn_dot_dev_dot_legumes_dot_v1_dot_bean__pb2.Bean.SerializeToString,
            defn_dot_dev_dot_legumes_dot_v1_dot_bean__pb2.Bean.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteBean(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/defn.dev.legumes.v1.BeanStoreService/DeleteBean',
            defn_dot_dev_dot_legumes_dot_v1_dot_bean__pb2.Bean.SerializeToString,
            defn_dot_dev_dot_legumes_dot_v1_dot_bean__pb2.Bean.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
